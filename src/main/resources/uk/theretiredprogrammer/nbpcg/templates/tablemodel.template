<#--
    Copyright 2018 Richard Linsdale.

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

        http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.

 -->
<#if license = "apache20" >
/*
 * Copyright ${copyright}.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
</#if>
<#if license = "gpl30" >
/*
 * Copyright (C) ${copyright}
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
</#if>
<#if license = "lgpl21" >
/*
 * Copyright (C) ${copyright}
 *
 * This library is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public
 * License as published by the Free Software Foundation; either
 * version 2.1 of the License, or (at your option) any later version.
 *
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this library; if not, write to the Free Software
 * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston,
 * MA 02110-1301  USA
 */
</#if>
<#-- Freemarker Template for TableModel class -->
<#assign templateauthor = "Richard Linsdale (richard at theretiredprogrammer.uk)" />
<#assign ENTITYINFO = entityinfo[useentityinfo] >
<#assign require_bigdecimal = "no">
<#list ENTITYINFO.field![] as field>
<#if field.javatype = "BigDecimal" >
<#assign require_bigdecimal = "yes" >
</#if>
</#list>
package ${package};

import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import java.util.function.Function;
import javax.swing.table.AbstractTableModel;

/**
 * The ${ENTITYINFO.name} TableModel class.
 *
 * (Class generated by NetBeans Platform Code Generator tools using ${DEFINITION_FILE}.  
 * Do not edit this file.  Apply any changes to the definition file and regenerate all files.)
 *
 * @author ${templateauthor}
 */
public class ${ENTITYINFO.name}TableModel extends AbstractTableModel {

     private static final String[] COLUMNNAMES = {
<#assign prefix = "">
<#list ENTITYINFO.field![] as field>
<#if field.tablecolumnname??>
        ${prefix}"${field.tablecolumnname}"
<#assign prefix="," >
</#if>
</#list>
    };
    private static final List<Function<${ENTITYINFO.name}, Object>> OBTAINVALUES = new ArrayList<>();
    static {
<#list ENTITYINFO.field![] as field>
<#if field.tablecolumnname??>
        OBTAINVALUES.add((e)-> e.get${field.name?cap_first}());
</#if>
</#list>
    }

    private final List<${ENTITYINFO.name}> dpl = new ArrayList<>();

    /**
     * Constructor.
     *
     * @param ds The ${ENTITYINFO.parentname} entity
     */
    public ${ENTITYINFO.name}TableModel(${ENTITYINFO.parentname} ds) {
        dpl.addAll(new ${ENTITYINFO.name}s(ds.getId()));
    }
    
    /**
     * Constructor.
     *
     * @param dsl A list of ${ENTITYINFO.parentname} entities
     */
    public DataPointTableModel(List<${ENTITYINFO.parentname}> dsl) {
        dsl.stream().forEach((ds)-> dpl.addAll(new ${ENTITYINFO.name}s(ds.getId())));
    }

    /**
     * Get the column names.
     *
     * @return The set of names
     */
    public List<String> getColumnNames() {
        return Arrays.asList(COLUMNNAMES);
    }

    @Override
    public int getRowCount() {
        return dpl.size();
    }

    @Override
    public int getColumnCount() {
        return COLUMNNAMES.length;
    }

    @Override
    public Object getValueAt(int row, int column) {
        return OBTAINVALUES.get(column).apply(dpl.get(row));
    }

    @Override
    public String getColumnName(int column) {
        return COLUMNNAMES[column];
    }

    @Override
    public Class getColumnClass(int column) {
        return getValueAt(0, column).getClass();
    }

    @Override
    public boolean isCellEditable(int row, int column) {
        return false;
    }
}