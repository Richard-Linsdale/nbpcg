<#--
 * Copyright (C) 2014-2015 Richard Linsdale (richard.linsdale at blueyonder.co.uk)
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 -->
<#if license = "gpl30" >
/*
 * Copyright (C) ${copyright}
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
</#if>
<#if license = "lgpl21" >
/*
 * Copyright (C) ${copyright}
 *
 * This library is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public
 * License as published by the Free Software Foundation; either
 * version 2.1 of the License, or (at your option) any later version.
 *
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this library; if not, write to the Free Software
 * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston,
 * MA 02110-1301  USA
 */
</#if>
<#-- Freemarker Template for any Table Entity Node Editor class -->
<#assign templateauthor = "Richard Linsdale (richard.linsdale at blueyonder.co.uk)" />
<#-- ============================================== -->
<#assign ENTITYINFO = entityinfo[useentityinfo] >
package ${package};

<#if ENTITYINFO.childnodesineditor??>
import java.util.ArrayList;
import java.util.List;
</#if>
import javax.swing.JComponent;
import ${datapackage}.*;
import ${nodepackage}.${ENTITYINFO.name}Node;
import uk.org.rlinsdale.nbpcglibrary.form.*;
import uk.org.rlinsdale.nbpcglibrary.common.*;
import uk.org.rlinsdale.nbpcglibrary.topcomponent.*;
import org.openide.util.NbBundle;
import org.openide.util.NbBundle.Messages;
import org.openide.windows.TopComponent;
import ${datapackage}.${ENTITYINFO.name}.${ENTITYINFO.name}Field;
import static uk.org.rlinsdale.nbpcglibrary.form.Form.FormSaveResult.SAVESUCCESS;

/**
 * NodeEditor for ${ENTITYINFO.name}Node.
 *
 * (Class generated by NetBeans Platform Code Generator tools using ${DEFINITION_FILE}.  
 * Do not edit this file.  Apply any changes to the definition file and regenerate all files.)
 *
 * @author ${templateauthor}
 */
@TopComponent.Description(preferredID = "${ENTITYINFO.name}NodeEditor",
iconBase = "com/famfamfam/www/silkicons/${ENTITYINFO.icon}.png",
persistenceType = TopComponent.PERSISTENCE_NEVER)
@TopComponent.Registration(mode = "editor", openAtStartup = false)
@Messages({
    "CTL_${ENTITYINFO.name}NodeEditor=${ENTITYINFO.name} Editor",
    "HINT_${ENTITYINFO.name}NodeEditor=This is the ${ENTITYINFO.name} Editor"
})
public final class ${ENTITYINFO.name}NodeEditor extends NodeEditorTopComponent<${ENTITYINFO.pkeytype}, ${ENTITYINFO.name}, ${ENTITYINFO.parentname}, ${ENTITYINFO.name}Field> {
    
    private final TitleChangeListener titlechangelistener;
    private final ${ENTITYINFO.name}Source source;
    private Form form;
<#if ENTITYINFO.childnodesineditor??>
private final List<Table> tables = new ArrayList<>();
</#if>
  
    public ${ENTITYINFO.name}NodeEditor(${ENTITYINFO.name}Node node) {
        super(node,
                NbBundle.getMessage(${ENTITYINFO.name}NodeEditor.class, "CTL_${ENTITYINFO.name}NodeEditor"),
                NbBundle.getMessage(${ENTITYINFO.name}NodeEditor.class, "HINT_${ENTITYINFO.name}NodeEditor"));
        ${ENTITYINFO.name} e = node.getEntity();
        source = new ${ENTITYINFO.name}Source(e);
        titlechangelistener = new TitleChangeListener("Editor:" + e.instanceDescription());
<#if ENTITYINFO.childnodesineditor??>
<#list ENTITYINFO.childnodesineditor?split(",") as childnode>
       tables.add(new ${childnode}Table(e));
</#list>
</#if>
    }

    @Override
    protected JComponent getDisplayComponent() {
        form = new Form("${ENTITYINFO.name}Editor", source.getFormFields());
<#if ENTITYINFO.childnodesineditor??>
        tables.stream().forEach((t) -> {
            form.addTable(t);
        });
</#if>
        return form;
    }

    @Override
    protected void opened() {
        source.opened();
<#if ENTITYINFO.childnodesineditor??>
        tables.stream().forEach((t) -> {
            t.opened();
        });
</#if>
        setName("${ENTITYINFO.name}: " + node.getDisplayTitle());
        entity.addTitleListener(titlechangelistener);
    }

    @Override
    protected void closed() {
        entity.removeTitleListener(titlechangelistener);
<#if ENTITYINFO.childnodesineditor??>
        tables.stream().forEach((t) -> {
            t.closed();
        });
</#if>
        source.closed();
    }

    @Override
    protected boolean canCloseForm() {
         return form.save() == SAVESUCCESS;
    }

    private class TitleChangeListener extends Listener<SimpleEventParams> {

        public TitleChangeListener(String name) {
            super(name);
        }

        @Override
        public void action(SimpleEventParams p) {
            setName("${ENTITYINFO.name}: " + node.getDisplayTitle());
        }
    }
}