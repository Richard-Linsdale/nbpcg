<#--
 * Copyright (C) 2014 Richard Linsdale (richard.linsdale at blueyonder.co.uk)
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 -->
<#if license = "gpl30" >
/*
 * Copyright (C) 2014 Richard Linsdale (richard.linsdale at blueyonder.co.uk)
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
</#if>
<#if license = "lgpl21" >
/*
 * Copyright (C) 2014 Richard Linsdale (richard.linsdale at blueyonder.co.uk).
 *
 * This library is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public
 * License as published by the Free Software Foundation; either
 * version 2.1 of the License, or (at your option) any later version.
 *
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this library; if not, write to the Free Software
 * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston,
 * MA 02110-1301  USA
 */
</#if>
<#-- Freemarker Template for any Node Viewer class -->
<#assign templateauthor = "Richard Linsdale (richard.linsdale at blueyonder.co.uk)" />
<#assign NODEINFO = nodeinfo[usenodeinfo] >
package ${package};

import ${nodepackage}.*;
import uk.org.rlinsdale.nbpcg.topcomponentsupportlib.ExplorerTopComponent;
import org.openide.awt.ActionID;
import org.openide.awt.ActionReference;
<#if type="Tree">
<#assign view = "BeanTreeView"/>
</#if>
<#if type="Icon">
<#assign view = "IconView"/>
</#if>
import org.openide.explorer.view.${view};
import org.openide.nodes.AbstractNode;
import org.openide.util.NbBundle;
import org.openide.util.NbBundle.Messages;
import org.openide.windows.TopComponent;

/**
 * Viewer for ${NODEINFO.entity} (type=${type})
 *
 * (Class generated by NetBeans Platform Code Generator tools using ${DEFINITION_FILE}.  
 * Do not edit this file, apply any changes to the definition file and regenerate all files.)
 *
 * @author ${templateauthor}
 */
@TopComponent.Description(preferredID = "${NODEINFO.name}Viewer", iconBase = "com/famfamfam/www/silkicons/${NODEINFO.icon}.png", persistenceType = TopComponent.PERSISTENCE_ALWAYS)
@TopComponent.Registration(mode = "explorer", openAtStartup = true, roles={"${NODEINFO.viewers?replace(",","\",\"")}"})
@ActionID(category = "Window", id = "${package}.${NODEINFO.name}Viewer")
@ActionReference(path = "Menu/Window")
@TopComponent.OpenActionRegistration(displayName = "#CTL_${NODEINFO.name}Viewer",
preferredID = "${NODEINFO.name}Viewer")
@Messages({
    "CTL_${NODEINFO.name}Viewer=${NODEINFO.label}",
    "HINT_${NODEINFO.name}Viewer=Viewer for ${NODEINFO.label}"
})
public final class ${NODEINFO.name}Viewer extends ExplorerTopComponent {

    public ${NODEINFO.name}Viewer() {
        super("${NODEINFO.name}Viewer",
                new ${view}(),
                NbBundle.getMessage(${NODEINFO.name}Viewer.class, "CTL_${NODEINFO.name}Viewer"),
                NbBundle.getMessage(${NODEINFO.name}Viewer.class, "HINT_${NODEINFO.name}Viewer"));
    }

    @Override
    public AbstractNode getRootContextNode() {
        return new ${NODEINFO.name}();
    }
}