<#--
 * Copyright (C) 2014-2015 Richard Linsdale (richard.linsdale at blueyonder.co.uk)
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 -->
<#if license = "gpl30" >
/*
 * Copyright (C) ${copyright}
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
</#if>
<#if license = "lgpl21" >
/*
 * Copyright (C) ${copyright}
 *
 * This library is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public
 * License as published by the Free Software Foundation; either
 * version 2.1 of the License, or (at your option) any later version.
 *
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this library; if not, write to the Free Software
 * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston,
 * MA 02110-1301  USA
 */
</#if>
<#-- Freemarker Template for any Node Viewer class -->
<#assign templateauthor = "Richard Linsdale (richard.linsdale at blueyonder.co.uk)" />
<#assign ENTITYINFO = entityinfo[useentityinfo] >
package ${package};

import ${nodepackage}.*;
import uk.org.rlinsdale.nbpcglibrary.topcomponent.ExplorerTopComponent;
import org.openide.awt.ActionID;
import org.openide.awt.ActionReference;
<#if type="Tree">
<#assign view = "BeanTreeView"/>
<#assign nameext = "" />
</#if>
<#if type="Icon">
<#assign view = "IconView"/>
<#assign nameext = "Icon" />
</#if>
import org.openide.explorer.view.${view};
import org.openide.nodes.AbstractNode;
import org.openide.util.NbBundle;
import org.openide.util.NbBundle.Messages;
import org.openide.windows.TopComponent;
import uk.org.rlinsdale.nbpcglibrary.common.LogBuilder;

/**
 * Viewer for ${ENTITYINFO.name} (type=${type})
 *
 * (Class generated by NetBeans Platform Code Generator tools using ${DEFINITION_FILE}.  
 * Do not edit this file.  Apply any changes to the definition file and regenerate all files.)
 *
 * @author ${templateauthor}
 */
@TopComponent.Description(preferredID = "${ENTITYINFO.name}${nameext}NodeViewer", iconBase = "com/famfamfam/www/silkicons/${ENTITYINFO.icon}.png", persistenceType = TopComponent.PERSISTENCE_ALWAYS)
@TopComponent.Registration(mode = "explorer", openAtStartup = true, roles={"${ENTITYINFO.viewers?replace(",","\",\"")}"})
@ActionID(category = "Window", id = "${package}.${ENTITYINFO.name}${nameext}NodeViewer")
@ActionReference(path = "Menu/Window")
@TopComponent.OpenActionRegistration(displayName = "#CTL_${ENTITYINFO.name}${nameext}NodeViewer",
preferredID = "${ENTITYINFO.name}${nameext}NodeViewer")
@Messages({
    "CTL_${ENTITYINFO.name}${nameext}NodeViewer=${ENTITYINFO.label}",
    "HINT_${ENTITYINFO.name}${nameext}NodeViewer=Viewer for ${ENTITYINFO.label}"
})
public final class ${ENTITYINFO.name}${nameext}NodeViewer extends ExplorerTopComponent {

    public ${ENTITYINFO.name}${nameext}NodeViewer() {
        super("${ENTITYINFO.name}${nameext}NodeViewer",
                new ${view}(),
                NbBundle.getMessage(${ENTITYINFO.name}${nameext}NodeViewer.class, "CTL_${ENTITYINFO.name}${nameext}NodeViewer"),
                NbBundle.getMessage(${ENTITYINFO.name}${nameext}NodeViewer.class, "HINT_${ENTITYINFO.name}${nameext}NodeViewer"));
    }

    @Override
    public AbstractNode getRootContextNode() {
        return new ${ENTITYINFO.name}${nameext}Node();
    }
 
    @Override
    public String instanceDescription() {
        return LogBuilder.instanceDescription(this);
    }
}